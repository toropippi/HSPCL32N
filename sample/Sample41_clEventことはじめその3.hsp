//WriteやReadをnon blockingにすると
//各行の処理が、実行完了しないまま次に進んでいることが目で見て分かります。
//ただしNVIDIA GPUでは強制ブロッキングになってしまう不具合があるのでうまくいきません。result.pngも参照ください。
#include "hspcl32n.as"
#include "ViewTimeStamp_module.as"
	randomize
	clinit
	prg=clCreateProgram("VecAdd.cl")
	krn=clCreateKernel(prg,"vecAdd")
	
	n=65536
	clmem_A=clCreateBuffer(n*4)
	clmem_B=clCreateBuffer(n*4)
	clmem_C=clCreateBuffer(n*4)
	
	dim host_A,n
	dim host_B,n
	dim host_C,n
		repeat n
		host_A.cnt=cnt
		host_B.cnt=cnt
		loop
	
	clWriteBuffer clmem_A,host_A,n*4,,,0,0//event_id 0
	clWriteBuffer clmem_B,host_B,n*4,,,0,1//event_id 1
	
	clSetKrns krn,clmem_A,clmem_B,clmem_C
	
	clDoKrn1 krn,n,64,2//event_id 2
	
	clFlush
	
	clReadBuffer clmem_C,host_C,n*4,,,0,3//event_id 3
	
	//eventから時間情報を取得。返り値は64bit int
	clFinish
	event_num=4
	
	ViewEvents2 4
	stop
